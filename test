program Fact;
	function Factorial(n:Integer):Integer
		begin
			if (n = 0) then
				result := 1
			else
				result := n * Factorial(n-1)
		end;
	procedure ZeroToTen(f:Fun(Integer):Integer)
		const N = 10 ; A = [0,1,2,3,4,5,6,7,8,9];
		var i:Integer;
		begin
			i := 0;
			while i < 10 do 
			begin
				writeln("Res: i=",i ," -> ", f(A[i]));
				i := i + 1
			end
		end;
	begin
		ZeroToTen(Factorial);
		writeln()
	end.

program Fact;
	function Factorial(n:Integer):Integer
		var res:Integer;
		begin
			if (n = 0) then
				res := 1
			else
				res := n * Factorial(n-1);
			result := res
		end;
	begin
		writeln(Factorial(40));
		writeln()
	end.

program TestProc;
	const x = 2;
	var y:Integer;
	procedure test(x:Integer, y:Integer)
		const z = 1;
		begin
			writeln(x+y+z)
		end;
	begin
		y := 4;
		test(x, y);
		writeln()
	end.

program TestFun;
	const x = 2;
	var y:Integer;
	function test(x:Integer, z:Integer):Integer
		begin
			result := x+z
		end;
	begin
		y := 4;
		writeln(test(x,y));
		writeln()
	end.

program Vetores;
	const const_array = [1,2,3,4,5,6];
	var var_array : Array(6,Integer); i:Integer;
	begin
		while (i < 6) do
		begin
			var_array[i] := const_array[i];
			i := i + 1
		end;
		writeln("Valor -> ", var_array[4]);
		writeln()
	end.


program Hello;
	begin
		writeln("Hello World!");
		write("Eu tenho ");
		writeln(2," amores. :P", false);
		writeln()
	end.

program AutoDeref;
	const x = 1;
	var y:Integer;
	begin
		y := 3;
		writeln(x + y);
		writeln()
	end.

program TestRecord;
	const y = {first = 3, second = "ola", third = true, forth = [1,2], fifth = {bla = "Yay"}};
	var x:Record(first:Integer, second:String, third:Bool, forth:Array(2, Integer), fifth:Record(bla:String));
	begin
		x.first := y.first;
		x.second := y.second;
		x.third := y.third;
		x.forth := y.forth;
		x.fifth := y.fifth;
		writeln(x.first, " ", x.second, " ", x.third, " ", "[", x.forth[0] , ",", x.forth[1], "]", " ", "{", x.fifth.bla, "}");
		writeln()
	end.
	
program NoArgs;
	function Test():Integer
	begin
		result := 9
	end;
	begin
		writeln(Test());
		writeln()
	end.

program PrintRef;
	var y:Integer;
	begin
		y := 12;
		writeln(y);
		writeln()
	end.
	
program ChangeGlobal;
	const x = 10;
	var y:Integer;
	procedure test()
	begin
		y := x
	end;
	begin
		test();
		writeln(y);
		writeln()
	end.

program TestRead;
	var x:Integer;y:String;z:Bool;
	begin
		readln(x, y);
		read(z);
		read(y);
		writeln(x, " ", y, " ", z);
		writeln()
	end.
12345 bla true
true ble2

program TestRecordParam;
	var r:Record(a:Integer, b:String);
	procedure test(x:Record(a:Integer, b:String))
	begin
		x.a := 10;
		x.b := "ola"
	end;
	begin
		test(r);
		writeln(r.a, " ", r.b, " ")
	end.
