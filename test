program Fact;
function Factorial(n:Integer):Integer
var res:Integer;
begin
if (n = 1) then
res := 1
else
res := n * Factorial(n-1);
result := res
end;
procedure ZeroToTen(f:Fun(Integer):Integer)
const N = 10 ; A = [0,1,2,3,4,5,6,7,8,9];
var i:Integer;
begin
i := 0;
while i < 10 do begin
writeln("Res: i=",i ," -> ", f(A[i]));
i := i + 1
end
end;
begin
ZeroToTen(Factorial)
end.

program Fact;
function Factorial(n:Integer):Integer
var res:Integer;
begin
if (n = 1) then
begin
res := 1
end
else
begin
res := n * Factorial(n-1)
end;
result := res
end;
begin
write(Factorial(40))
end.

program O;
const x = 2;
var y:Integer;
procedure Lol(x:Integer, y:Integer)
const z = 1;
begin
writeln(x+y+z)
end;
begin
y := 4;
Lol(x, y)
end.

program O;
const x = 2;
var y:Integer;
function Lol(x:Integer, z:Integer):Integer
begin
result := x+z
end;
begin
y := 4;
write(Lol(x,y))
end.

program Vetores;
const const_array = [1,2,3,4,5,6];
var var_array : Array(6,Integer); i:Integer;
begin
while (i < 6) do
begin
var_array[i] := const_array[i];
i := i + 1
end;
writeln("Valor -> ", var_array[4])
end.


program Hello;
begin
writeln("Hello World!");
write("Eu tenho ");
writeln(2," amores. :P", false)
end.

program AutoDeref;
const x = 1;
var y:Integer;
begin
y := 3;
write(x + y)
end.

program TestRecord;
const y = {first = 3, second = "ola", third = true, forth = [1,2], fifth = {bla = "Yay"}};
var x:Record(first:Integer, second:String, third:Bool, forth:Array(2, Integer), fifth:Record(bla:String));
begin
x.first := y.first;
x.second := y.second;
x.third := y.third;
x.forth := y.forth;
x.fifth := y.fifth;
writeln(x.first, " ", x.second, " ", x.third, " ", "[", x.forth[0] , ",", x.forth[1], "]", " ", "{", x.fifth.bla, "}")
end.

program TestRead;
var x:Integer;y:String;z:Bool;
begin
readln(x, y);
read(z);
writeln(x, " ", y, " ", z)
end.

